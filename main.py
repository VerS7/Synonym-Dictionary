#  -*- coding: utf-8 -*-
# GUI module generated by PAGE version 7.4
import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import SynDict_support


class window:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = 'gray40' # X11 color: #666666
        _ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
        _ana2color = 'beige' # X11 color: #f5f5dc
        _tabfg1 = 'black' 
        _tabfg2 = 'black' 
        _tabbg1 = 'grey75' 
        _tabbg2 = 'grey89' 
        _bgmode = 'light' 

        top.geometry("327x570+696+234")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(0,  0)
        top.title("Toplevel 0")
        top.configure(background="#ffffff")

        self.top = top
        self.wordStrng = tk.StringVar()
        self.synStrng = tk.StringVar()
        self.scrollbar = tk.Scrollbar(self.top)
        self.scrollbar.pack(side=RIGHT, fill=Y)
        self.WordEntry = tk.Entry(self.top)
        self.WordEntry.place(relx=0.031, rely=0.018, height=40, relwidth=0.44)
        self.WordEntry.configure(background="#e5e5e5")
        self.WordEntry.configure(borderwidth="0")
        self.WordEntry.configure(disabledforeground="#a3a3a3")
        self.WordEntry.configure(font="-family {Segoe UI Black} -size 12 -weight bold")
        self.WordEntry.configure(foreground="#000000")
        self.WordEntry.configure(highlightbackground="#e2f9ca")
        self.WordEntry.configure(insertbackground="black")
        self.WordEntry.configure(relief="groove")
        self.WordEntry.configure(textvariable=self.wordStrng)

        self.SynEntry = tk.Entry(self.top)
        self.SynEntry.place(relx=0.52, rely=0.018, height=40, relwidth=0.44)
        self.SynEntry.configure(background="#e5e5e5")
        self.SynEntry.configure(borderwidth="0")
        self.SynEntry.configure(disabledforeground="#a3a3a3")
        self.SynEntry.configure(font="-family {Segoe UI Black} -size 12 -weight bold")
        self.SynEntry.configure(foreground="#000000")
        self.SynEntry.configure(insertbackground="black")
        self.SynEntry.configure(textvariable=self.synStrng)

        self.AddBtn = tk.Button(self.top)
        self.AddBtn.place(relx=0.061, rely=0.105, height=34, width=127)
        self.AddBtn.configure(activebackground="#bcbcbc")
        self.AddBtn.configure(activeforeground="#000000")
        self.AddBtn.configure(background="#d9d9d9")
        self.AddBtn.configure(borderwidth="0")
        self.AddBtn.configure(command=self.addToList)
        self.AddBtn.configure(compound='left')
        self.AddBtn.configure(cursor="fleur")
        self.AddBtn.configure(disabledforeground="#a3a3a3")
        self.AddBtn.configure(font="-family {Segoe UI Black} -size 14 -weight bold")
        self.AddBtn.configure(foreground="#000000")
        self.AddBtn.configure(highlightbackground="#d9d9d9")
        self.AddBtn.configure(highlightcolor="black")
        self.AddBtn.configure(pady="0")
        self.AddBtn.configure(text='''Добавить''')

        self.DelBtn = tk.Button(self.top)
        self.DelBtn.place(relx=0.55, rely=0.105, height=34, width=127)
        self.DelBtn.configure(activebackground="#bcbcbc")
        self.DelBtn.configure(activeforeground="#000000")
        self.DelBtn.configure(background="#d9d9d9")
        self.DelBtn.configure(borderwidth="0")
        self.DelBtn.configure(command=self.delFromList)
        self.DelBtn.configure(compound='left')
        self.DelBtn.configure(disabledforeground="#a3a3a3")
        self.DelBtn.configure(font="-family {Segoe UI Black} -size 14 -weight bold")
        self.DelBtn.configure(foreground="#000000")
        self.DelBtn.configure(highlightbackground="#d9d9d9")
        self.DelBtn.configure(highlightcolor="black")
        self.DelBtn.configure(pady="0")
        self.DelBtn.configure(text='''Удалить''')

        self.SynList = tk.Listbox(self.top)
        self.SynList.place(relx=0.031, rely=0.175, relheight=0.723
                , relwidth=0.93)
        self.SynList.configure(background="#e1e1e1")
        self.SynList.configure(borderwidth="0")
        self.SynList.configure(disabledforeground="#a3a3a3")
        self.SynList.configure(font="-family {Segoe UI Black} -size 14 -weight bold")
        self.SynList.configure(foreground="#000000")
        self.SynList.configure(yscrollcommand=self.scrollbar.set)

        self.SaveBtn = tk.Button(self.top)
        self.SaveBtn.place(relx=0.061, rely=0.912, height=34, width=127)
        self.SaveBtn.configure(activebackground="#bcbcbc")
        self.SaveBtn.configure(activeforeground="#000000")
        self.SaveBtn.configure(background="#d9d9d9")
        self.SaveBtn.configure(borderwidth="0")
        self.SaveBtn.configure(command=self.saveToFile)
        self.SaveBtn.configure(compound='left')
        self.SaveBtn.configure(cursor="fleur")
        self.SaveBtn.configure(disabledforeground="#a3a3a3")
        self.SaveBtn.configure(font="-family {Segoe UI Black} -size 14 -weight bold")
        self.SaveBtn.configure(foreground="#000000")
        self.SaveBtn.configure(highlightbackground="#d9d9d9")
        self.SaveBtn.configure(highlightcolor="black")
        self.SaveBtn.configure(pady="0")
        self.SaveBtn.configure(text='''Сохранить''')

        self.LoadBtn = tk.Button(self.top)
        self.LoadBtn.place(relx=0.55, rely=0.912, height=34, width=127)
        self.LoadBtn.configure(activebackground="#bcbcbc")
        self.LoadBtn.configure(activeforeground="#000000")
        self.LoadBtn.configure(background="#d9d9d9")
        self.LoadBtn.configure(borderwidth="0")
        self.LoadBtn.configure(command=self.loadFromFile)
        self.LoadBtn.configure(compound='left')
        self.LoadBtn.configure(disabledforeground="#a3a3a3")
        self.LoadBtn.configure(font="-family {Segoe UI Black} -size 14 -weight bold")
        self.LoadBtn.configure(foreground="#000000")
        self.LoadBtn.configure(highlightbackground="#d9d9d9")
        self.LoadBtn.configure(highlightcolor="black")
        self.LoadBtn.configure(pady="0")
        self.LoadBtn.configure(text='''Загрузить''')

        self.top.title('Словарь Синонимов')
        self.synonimList = []
        self.scrollbar.config(command=self.SynList.yview)

    def addToList(self):
        try:
            word = self.wordStrng.get()
            synonym = self.synStrng.get()
            if len(word) and len(synonym) > 2:
                self.SynList.insert(END, f'{word} - {synonym}')
            self.synonimList.append(f'{word} - {synonym}')
        except Exception as e:
            print(e)

    def delFromList(self):
        try:
            self.SynList.delete(self.SynList.curselection())
        except Exception as e:
            print(e)

    def saveToFile(self):
        try:
            with open('synonims.txt', 'w') as file:
                for elem in self.synonimList:
                    file.write(elem + '\n')
        except Exception as e:
            print(e)

    def loadFromFile(self):
        try:
            with open('synonims.txt', 'r', encoding='utf-8') as file:
                self.synonimList.clear()
                for elem in file.readlines():
                    self.synonimList.append(elem.strip('\n'))
                for elem in self.synonimList:
                    self.SynList.insert(END, elem)
        except Exception as e:
            print(e)

def start_up():
    SynDict_support.main()

if __name__ == '__main__':
    SynDict_support.main()




